/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/*
 * To align layers by column in vim:
 * :'<,'>Tabularize / &/l0 
 */

/ {
		behaviors { 
			hm: homerow_mods {
					compatible = "zmk,behavior-hold-tap";
					label = "HOMEROW_MODS";
					#binding-cells = <2>;
					tapping-term-ms = <150>;
					quick_tap_ms = <0>;
					flavor = "tap-preferred";
					bindings = <&kp>, <&kp>;
			};
			hl: homerow_layers {
					compatible = "zmk,behavior-layer-tap";
					label = "HOMEROW_LAYERS";
					#binding-cells = <2>;
					tapping-term-ms = <150>;
					quick_tap_ms = <0>;
					flavor = "tap-preferred";
					bindings = <&mo>, <&kp>;
			};
		};

        keymap {
                compatible = "zmk,keymap";

                layer_0 {
                        bindings = <
							&kp TAB   &kp SQT  &kp COMMA &kp DOT &kp P         &kp Y  /*       &                     &*/                   &kp F          &kp G        &kp C   &kp R   &kp L   &kp BSLH
							&kp ESC   &hl 1 A  &hl 2 O   &hl 3 E &hl 4 U       &hm LCTRL I  /* &                     &*/                   &hm RCTRL D    &hl 5 H      &hl 6 T &hl 7 N &hl 8 S &kp MINUS
							&kp LSHFT &kp SEMI &kp Q     &kp J   &kp K         &kp X  /*       &                     &*/                   &kp B          &kp M        &kp W   &kp V   &kp Z   &mt RSHFT FSLH
							/*        &        &         &*/     &mt LALT BSPC &mt LGUI SPACE  &mt LC(LA(LSHFT)) RET &mt RC(RA(RSHFT)) RET &mt RGUI SPACE &mt RALT DEL
                        >;
                };

				// Right-Hand Symbols
                layer_1 {
                        bindings = <
							&none  &none  &none &none &none  &none /* &      &*/    &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp PLUS
							&none  &trans &none &none &none  &none /* &      &*/    &none     &none    &none     &kp LBKT &kp RBKT &kp EQUAL
							&trans &none  &none &none &none  &none /* &      &*/    &none     &none    &none     &kp LBRC &kp RBRC &trans
							/*     &      &     &*/   &trans &trans   &trans &trans &trans    &trans
                        >;
                };

				// Ten-Key
                layer_2 {
                        bindings = <
							&none  &none &none  &none &none  &none  /* &      &*/    &none  &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_PLUS  &kp KP_MINUS
							&none  &none &trans &none &none  &none  /* &      &*/    &none  &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_COMMA &kp KP_DOT
							&trans &none &none  &none &none  &none  /* &      &*/    &none  &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_EQUAL &kp RET
							/*     &     &      &*/   &trans &trans    &trans &trans &trans &kp KP_N0
                        >;
                };

				// Mouse Keys (Reserved for if/when that feature gets added) 
                layer_3 {
                        bindings = <
							&none     &none &none &none  &none /* &      &*/    &none  &none  &none  &none &none &none &none
							&none     &none &none &trans &none /* &      &*/    &none  &none  &none  &none &none &none &none
							&kp LSHFT &none &none &none  &none /* &      &*/    &none  &none  &none  &none &none &none &kp RSHFT
							/*        &     &     &*/    &trans   &trans &trans &trans &trans &trans
                        >;
                };

				// Arrow, Movement Keys
                layer_4 {
                        bindings = <
							&none  &none &none &none &none  &none /* &      &*/    &kp C_VOL_UP &kp HOME  &kp UP   &kp END         &kp PG_UP &none
							&none  &none &none &none &trans &none /* &      &*/    &kp K_MUTE   &kp LEFT  &kp DOWN &kp RIGHT       &kp PG_DN &none
							&trans &none &none &none &none  &none /* &      &*/    &kp C_VOL_UP &kp PSCRN &kp SLCK &kp PAUSE_BREAK &none     &trans
							/*     &     &     &*/   &trans &trans   &trans &trans &trans       &trans
                        >;
                };


				// Function Keys
                layer_5 {
                        bindings = <
							&none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5 /*  & &*/ &none &none  &none &none &none &none
							&none  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10 /* & &*/ &none &trans &none &none &none &none
							&trans &kp F11 &kp F12 &kp F13 &kp F14 &kp F15 /* & &*/ &none &none  &none &none &none &trans
							/*     &     &     &*/   &trans &trans   &trans &trans &trans &trans
                        >;
                };

				// Reserved
                layer_6 {
                        bindings = <
							&none     &none &none &none &none  &none /* &      &*/    &none  &none  &none  &none &none &none
							&none     &none &none &none &none  &none /* &      &*/    &none  &none  &trans &none &none &none
							&kp LSHFT &none &none &none &none  &none /* &      &*/    &none  &none  &none  &none &none &kp RSHFT
							/*        &     &     &*/   &trans &trans   &trans &trans &trans &trans
                        >;
                };

				// Keyboard & Bluetooth Control
                layer_7 {
                        bindings = <
							&none        &none        &none        &none        &none        &none /*        &            &*/    &none  &none  &none &none  &none &none
							&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 /* &            &*/    &none  &none  &none &trans &none &none
							&none        &none        &none        &none        &none        &bt BT_CLR /*   &            &*/    &none  &none  &none &none  &none &none
							/*           &            &            &*/          &out OUT_USB &trans          &out OUT_BLE &trans &trans &trans
                        >;
                };

				// Left-Hand Symbols
                layer_8 {
                        bindings = <
							&kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT /* &     &*/   &none &none &none &none &none &none
							&kp GRAVE &none    &none  &none    &none    &none    /*  &     &*/   &none &none &none &none &none &none
							&trans    &none    &none  &none    &none    &none    /*  &     &*/   &none &none &none &none &none &trans
							/*        &        &      &*/      &none    &none        &none &none &none &none
                        >;
                };
        };
};
