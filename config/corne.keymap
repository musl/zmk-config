/* vim: set ft=c sw=4 ts=4 sts=4 expandtab :
 *
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 * vim tabularize command: (works in normal or visual line modes)
 *     Tabularize / &/l0
 *
 * Usage Notes:
 *  - layer 9 can be accessed by layer taps on F and Y for ergonomics and troubleshooting.
 *  - device switching is done by F or Y, and keys on the left-hand top row starting wih 0, so that 1 is directly
 *    above the left pinky finger.
 *  - clearing a device is done by holding F or Y, and then tapping X.
 *  - output selection is done by holding F or Y and then tapping U for USB, E for BLE.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors { 
        tpmt: tap_preferred_mo_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "TPMT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        bmt: balanced_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BMT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        ZMK_MACRO(macro_gg, bindings = <&kp ESC &kp COLON &kp G &kp G &kp EQUAL &kp LS(G)>;) // <ESC>gg=G
        ZMK_MACRO(macro_x,  bindings = <&kp ESC &kp COLON &kp X &kp ENTER>;) // <ESC>:x<ENTER>
        ZMK_MACRO(macro_qa, bindings = <&kp ESC &kp COLON &kp Q &kp A &kp EXCLAMATION &kp ENTER>;) // <ESC>:qa!<ENTER>
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
                   &kp TAB   &kp SQT   &kp COMMA      &kp DOT         &kp P                     &tpmt 9 Y /*     &*/                    &tpmt 9 F       &kp G         &kp C     &kp R     &kp L     &kp BSLH
                   &kp ESC   &tpmt 1 A &tpmt 2 O      &tpmt 3 E       &tpmt 4 U                 &tpmt LCTRL I /* &*/                    &tpmt RCTRL D   &tpmt 5 H     &tpmt 6 T &tpmt 7 N &tpmt 8 S &kp MINUS
                   &kp LSHFT &kp SEMI  &kp Q          &kp J           &kp K                     &kp X /*         &*/                    &kp B           &kp M         &kp W     &kp V     &kp Z     &mt RSHFT FSLH
                /* &         &*/       &bmt LALT BSPC &bmt LGUI SPACE &bmt LC(LA(LSHFT)) RET /* &*/              &bmt RC(RA(RSHFT)) RET &bmt RGUI SPACE &bmt RALT DEL
                >;
        };

        // Right-Hand Symbols
        layer_1 {
            bindings = <
                &none  &none  &none &none  &none  &none /*  &*/ &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp PLUS
                &none  &trans &none &none  &none  &none /*  &*/ &none     &none    &none     &kp LBKT &kp RBKT &kp EQUAL
                &trans &none  &none &none  &none  &none /*  &*/ &none     &none    &none     &kp LBRC &kp RBRC &kp QUESTION
                /*     &      &*/   &trans &trans &trans /* &*/ &trans    &trans   &trans
                >;
        };

        // Ten-Key
        layer_2 {
            bindings = <
                &none  &none &none  &none  &none  &none /*  &*/ &none  &kp N7 &kp N8 &kp N9 &kp KP_PLUS  &kp KP_MINUS
                &none  &none &trans &none  &none  &none /*  &*/ &none  &kp N4 &kp N5 &kp N6 &kp KP_COMMA &kp KP_DOT
                &trans &none &none  &none  &none  &none /*  &*/ &none  &kp N1 &kp N2 &kp N3 &kp KP_EQUAL &kp RET
                /*     &     &*/    &trans &trans &trans /* &*/ &trans &trans &kp N0
                >;
        };

        // Mouse Keys (Reserved for if/when that feature gets added) 
        layer_3 {
            bindings = <
                &none  &none &none &none  &none  &none /*  &*/ &none  &none  &none  &none &none &none
                &none  &none &none &trans &none  &none /*  &*/ &none  &none  &none  &none &none &none
                &trans &none &none &none  &none  &none /*  &*/ &none  &none  &none  &none &none &trans
                /*     &     &*/   &trans &trans &trans /* &*/ &trans &trans &trans
                >;
        };

        // Arrow, Movement, media Keys
        layer_4 {
            bindings = <
                &none  &none &none &none  &none  &none /*  &*/ &kp C_VOL_UP &kp HOME  &kp UP     &kp END         &kp PG_UP &none
                &none  &none &none &none  &trans &none /*  &*/ &kp C_MUTE   &kp LEFT  &kp DOWN   &kp RIGHT       &kp PG_DN &none
                &trans &none &none &none  &none  &none /*  &*/ &kp C_VOL_DN &kp PSCRN &kp SLCK   &kp PAUSE_BREAK &none     &trans
                /*     &     &*/   &trans &trans &trans /* &*/ &kp C_PREV   &kp C_PP  &kp C_NEXT
                >;
        };


        // Function Keys
        layer_5 {
            bindings = <
                &none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5 /*  &*/ &none  &none  &none  &none &none &none
                &none  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10 /* &*/ &trans &trans &none  &none &none &none
                &trans &kp F11 &kp F12 &kp F13 &kp F14 &kp F15 /* &*/ &none  &none  &none  &none &none &trans
                /*     &       &*/     &trans  &trans  &trans /*  &*/ &trans &trans &trans
                >;
        };

        // Macros
        layer_6 {
            bindings = <
                &none  &none &none     &none  &none  &none /*    &*/ &none  &macro_gg &none  &none &none &none
                &none  &none &none     &none  &none  &none /*    &*/ &trans &none     &trans &none &none &none
                &trans &none &macro_qa &none  &none  &macro_x /* &*/ &none  &none     &none  &none &none &trans
                /*     &     &*/       &trans &trans &trans /*   &*/ &trans &trans    &trans
                >;
        };

        // Reserved
        layer_7 {
            bindings = <
                &none  &none &none &none  &none  &none /*  &*/ &none  &none  &none  &none &none &none
                &none  &none &none &none  &none  &none /*  &*/ &trans &none  &trans &none &none &none
                &trans &none &none &none  &none  &none /*  &*/ &none  &none  &none  &none &none &trans
                /*     &     &*/   &trans &trans &trans /* &*/ &trans &trans &trans
                >;
        };

        // Left-Hand Symbols
        layer_8 {
            bindings = <
                &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT /* &*/ &none  &none  &none  &none &none  &none
                &kp GRAVE &none    &none  &none    &none    &none /*     &*/ &trans &none  &none  &none &trans &none
                &trans    &none    &none  &none    &none    &none /*     &*/ &none  &none  &none  &none &none  &trans
                /*        &        &*/    &trans   &trans   &trans /*    &*/ &trans &trans &trans
                >;
        };

        // Keyboard & Bluetooth Control
        layer_9 {
            bindings = <
                &none &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans /*     &*/ &trans &none &none &none &none &none
                &none &none        &none        &out OUT_BLE &out OUT_USB &none /*      &*/ &none  &none &none &none &none &none
                &none &none        &none        &none        &none        &bt BT_CLR /* &*/ &none  &none &none &none &none &none
                /*    &            &*/          &none        &none        &none /*      &*/ &none  &none &none
                >;
        };

    };
};

