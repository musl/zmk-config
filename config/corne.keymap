/* vim: set ft=c sw=4 ts=4 :
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 * vim tabularize command: (works in normal or visual line modes)
 *     Tabularize / &/l0
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	behaviors { 
		hmt: homerow_mod_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MOD_TAP";
			#binding-cells = <2>;
			tapping-term-ms = <175>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		hlt: homerow_layer_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_LAYER_TAP";
			#binding-cells = <2>;
			tapping-term-ms = <175>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
		};
		htqt: hold_tap_quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "HOLD_TAP_QUICK_TAP";
			#binding-cells = <2>;
			tapping-term-ms = <175>;
			quick_tap_ms = <150>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		layer_0 {
			bindings = <
				&kp TAB   &kp SQT  &kp COMMA &kp DOT         &kp P            &kp Y /*                   &*/ &kp F                   &kp G            &kp C          &kp R    &kp L    &kp BSLH
				&kp ESC   &hlt 1 A &hlt 2 O  &hlt 3 E        &hlt 4 U         &hmt LCTRL I /*            &*/ &hmt RCTRL D            &hlt 5 H         &hlt 6 T       &hlt 7 N &hlt 8 S &kp MINUS
				&kp LSHFT &kp SEMI &kp Q     &kp J           &kp K            &kp X /*                   &*/ &kp B                   &kp M            &kp W          &kp V    &kp Z    &mt RSHFT FSLH
				/*        &        &*/       &htqt LALT BSPC &htqt LGUI SPACE &htqt LC(LA(LSHFT)) RET /* &*/ &htqt RC(RA(RSHFT)) RET &htqt RGUI SPACE &htqt RALT DEL
				>;
		};

		// Right-Hand Symbols
		layer_1 {
			bindings = <
				&none  &none  &none &none  &none  &none /*  &*/ &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp PLUS
				&none  &trans &none &none  &none  &none /*  &*/ &none     &none    &none     &kp LBKT &kp RBKT &kp EQUAL
				&trans &none  &none &none  &none  &none /*  &*/ &none     &none    &none     &kp LBRC &kp RBRC &kp QUESTION
				/*     &      &*/   &trans &trans &trans /* &*/ &trans    &trans   &trans
				>;
		};

		// Ten-Key
		layer_2 {
			bindings = <
				&none  &none &none  &none  &none  &none /*  &*/ &none  &kp N7 &kp N8 &kp N9 &kp KP_PLUS  &kp KP_MINUS
				&none  &none &trans &none  &none  &none /*  &*/ &none  &kp N4 &kp N5 &kp N6 &kp KP_COMMA &kp KP_DOT
				&trans &none &none  &none  &none  &none /*  &*/ &none  &kp N1 &kp N2 &kp N3 &kp KP_EQUAL &kp RET
				/*     &     &*/    &trans &trans &trans /* &*/ &trans &trans &kp N0
				>;
		};

		// Mouse Keys (Reserved for if/when that feature gets added) 
		layer_3 {
			bindings = <
				&none  &none &none &none  &none  &none /*  &*/ &none  &none  &none  &none &none &none
				&none  &none &none &trans &none  &none /*  &*/ &none  &none  &none  &none &none &none
				&trans &none &none &none  &none  &none /*  &*/ &none  &none  &none  &none &none &trans
				/*     &     &*/   &trans &trans &trans /* &*/ &trans &trans &trans
				>;
		};

		// Arrow, Movement Keys
		layer_4 {
			bindings = <
				&none  &none &none &none  &none  &none /*  &*/ &kp C_VOL_UP &kp HOME  &kp UP   &kp END         &kp PG_UP &none
				&none  &none &none &none  &trans &none /*  &*/ &kp K_MUTE   &kp LEFT  &kp DOWN &kp RIGHT       &kp PG_DN &none
				&trans &none &none &none  &none  &none /*  &*/ &kp C_VOL_DN &kp PSCRN &kp SLCK &kp PAUSE_BREAK &none     &trans
				/*     &     &*/   &trans &trans &trans /* &*/ &trans       &trans    &trans
				>;
		};


		// Function Keys
		layer_5 {
			bindings = <
				&none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5 /*  &*/ &none  &none  &none  &none &none &none
				&none  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10 /* &*/ &trans &trans &none  &none &none &none
				&trans &kp F11 &kp F12 &kp F13 &kp F14 &kp F15 /* &*/ &none  &none  &none  &none &none &trans
				/*     &       &*/     &trans  &trans  &trans /*  &*/ &trans &trans &trans
				>;
		};

		// Reserved
		layer_6 {
			bindings = <
				&none  &none &none &none  &none  &none /*  &*/ &none  &none  &none  &none &none &none
				&none  &none &none &none  &none  &none /*  &*/ &trans &none  &trans &none &none &none
				&trans &none &none &none  &none  &none /*  &*/ &none  &none  &none  &none &none &trans
				/*     &     &*/   &trans &trans &trans /* &*/ &trans &trans &trans
				>;
		};

		// Keyboard & Bluetooth Control
		layer_7 {
			bindings = <
				&none        &none        &none        &none        &none        &none /*        &*/ &none        &none        &none      &none  &none             &none
				&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 /* &*/ &trans       &none        &none      &trans &none             &none
				&none        &none        &none        &none        &none        &none /*        &*/ &none        &none        &none      &none  &ext_power EP_OFF &none
				/*           &            &*/          &none        &trans       &none /*        &*/ &out OUT_USB &out OUT_BLE &bt BT_CLR
				>;
		};

		// Left-Hand Symbols
		layer_8 {
			bindings = <
				&kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT /* &*/ &none  &none  &none  &none &none  &none
				&kp GRAVE &none    &none  &none    &none    &none /*     &*/ &trans &none  &none  &none &trans &none
				&trans    &none    &none  &none    &none    &none /*     &*/ &none  &none  &none  &none &none  &trans
				/*        &        &*/    &trans   &trans   &trans /*    &*/ &trans &trans &trans
				>;
		};
	};
};

